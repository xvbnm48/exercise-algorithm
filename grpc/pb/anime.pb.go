// Code generated by protoc-gen-go. DO NOT EDIT.
// source: anime.proto

package anime

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cdf86e3cafc4bf7, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetResponse struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Genre                string   `protobuf:"bytes,2,opt,name=genre,proto3" json:"genre,omitempty"`
	Episodes             int32    `protobuf:"varint,3,opt,name=episodes,proto3" json:"episodes,omitempty"`
	Rating               float32  `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cdf86e3cafc4bf7, []int{1}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetResponse) GetGenre() string {
	if m != nil {
		return m.Genre
	}
	return ""
}

func (m *GetResponse) GetEpisodes() int32 {
	if m != nil {
		return m.Episodes
	}
	return 0
}

func (m *GetResponse) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*GetResponse)(nil), "GetResponse")
}

func init() { proto.RegisterFile("anime.proto", fileDescriptor_5cdf86e3cafc4bf7) }

var fileDescriptor_5cdf86e3cafc4bf7 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0x0e, 0x82, 0x30,
	0x10, 0x40, 0xa5, 0x08, 0xc1, 0xc3, 0x38, 0x34, 0xc6, 0x34, 0xc4, 0x81, 0x74, 0x62, 0xea, 0xa0,
	0x5f, 0xe0, 0xc4, 0xde, 0x3f, 0xc0, 0x70, 0x21, 0x97, 0x48, 0x8b, 0xf4, 0xfc, 0x7f, 0x43, 0x31,
	0xea, 0xf8, 0xde, 0x5d, 0x2e, 0xef, 0xa0, 0xec, 0x1c, 0x8d, 0x68, 0xa6, 0xd9, 0xb3, 0xd7, 0x67,
	0x80, 0x16, 0xd9, 0xe2, 0xf3, 0x85, 0x81, 0xe5, 0x01, 0x04, 0xf5, 0x2a, 0xa9, 0x93, 0x26, 0xb3,
	0x82, 0x7a, 0x3d, 0x42, 0x19, 0xa7, 0x61, 0xf2, 0x2e, 0xa0, 0x3c, 0x42, 0xc6, 0xc4, 0x0f, 0x8c,
	0x1b, 0x3b, 0xbb, 0xc2, 0x62, 0x07, 0x74, 0x33, 0x2a, 0xb1, 0xda, 0x08, 0xb2, 0x82, 0x02, 0x27,
	0x0a, 0xbe, 0xc7, 0xa0, 0xd2, 0x78, 0xf0, 0xcb, 0xf2, 0x04, 0xf9, 0xdc, 0x31, 0xb9, 0x41, 0x6d,
	0xeb, 0xa4, 0x11, 0xf6, 0x43, 0x17, 0x03, 0x45, 0x8b, 0x7c, 0x5b, 0xf2, 0xa4, 0x86, 0xb4, 0x45,
	0x96, 0xa5, 0xf9, 0xe5, 0x55, 0x7b, 0xf3, 0x57, 0xa3, 0x37, 0xf7, 0x3c, 0xfe, 0x70, 0x7d, 0x07,
	0x00, 0x00, 0xff, 0xff, 0xb1, 0xb1, 0x75, 0x59, 0xd2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetAnimeClient is the client API for GetAnime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetAnimeClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type getAnimeClient struct {
	cc *grpc.ClientConn
}

func NewGetAnimeClient(cc *grpc.ClientConn) GetAnimeClient {
	return &getAnimeClient{cc}
}

func (c *getAnimeClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/GetAnime/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetAnimeServer is the server API for GetAnime service.
type GetAnimeServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

// UnimplementedGetAnimeServer can be embedded to have forward compatible implementations.
type UnimplementedGetAnimeServer struct {
}

func (*UnimplementedGetAnimeServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterGetAnimeServer(s *grpc.Server, srv GetAnimeServer) {
	s.RegisterService(&_GetAnime_serviceDesc, srv)
}

func _GetAnime_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetAnimeServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetAnime/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetAnimeServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetAnime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GetAnime",
	HandlerType: (*GetAnimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _GetAnime_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "anime.proto",
}
